---- Explore all objects in database
--select * from INFORMATION_SCHEMA.TABLES

---- Explore all columns in database
--select * from INFORMATION_SCHEMA.COLUMNS



-- EXPLORE DIMENSIONS
-- Explore all the countries our customers come from

select distinct country 
from gold.dim_customers
;

-- Explore all categories "The major divisions"

select distinct category, subcateegory, product_name
from gold.dim_products
order by 1,2,3


-- Find date of first and last order
--How many years of sales are there

select min(order_date) as first_order_date, 
	   max(order_date) as last_order_date,
	   cast(year(max(order_date)) as int) - cast(year(min(order_date)) as int) as years_of_sales -- Or I can do datediff(year, min(order_date), max(order_date))
from gold.facts_table;

--Find youngest and oldest customers

select min(birthdate) as oldest_birthdate,
	   datediff(year, min(birthdate), getdate()) as oldest_age,
	   max(birthdate) as youngest_bdate,
	   datediff(year, max(birthdate), getdate()) as youngest_age
from gold.dim_customers




--EXPLORE METRICS
--Find the Total Sales

select sum(sales_amount) as total_sales
from gold.facts_table


--Find how many items are sold

select sum(quantity) as total_items
from gold.facts_table


--Find the average selling price

select avg(price) as avg_price
from gold.facts_table



--Find the Total number of Orders

select count(order_number) as total_orders
from gold.facts_table
;

select count(distinct order_number) as total_orders -- Need to do distinct cuz theres multiple orders with same order number but diff product. This shows customer is buying multipe products within same order
from gold.facts_table
;


--Find the total number of products

select count(distinct product_name) as total_products
from gold.dim_products


--Find the total number of customers

select count(customer_key) as total_customers
from gold.dim_customers

--Find the total number of customers that have placed an order

select count(distinct customer_key) as total_cutomers
from gold.facts_table


--Generating a query that shows all key metrics of the business
select 'Total Sales' as measure_name, sum(sales_amount) as measure_value from gold.facts_table
union all
select 'Total Quantity' as masure_name, sum(quantity) as measure_value from gold.facts_table
union all
select 'Average Price' as masure_name, avg(price) as measure_value from gold.facts_table
union all
select 'Total Orders' as masure_name, count(distinct order_number) as measure_value from gold.facts_table
union all
select 'Total Products' as masure_name, count(distinct product_name) as measure_value from gold.dim_products
union all
select 'Total Customers' as masure_name, count(customer_key) as measure_value from gold.dim_customers
union all
select 'Total Customers Who Bought' as masure_name, count(distinct customer_key) as measure_value from gold.facts_table



-- Exploring measures with dimensions

--Find total customers by countries
select country,count(customer_id)  as total_customers
from gold.dim_customers
group by country;

--Find total customers by gender
select gender, count(customer_id) as total_customers
from gold.dim_customers
group by gender;

--Find total products by category
select category, count(product_name) as total_products
from gold.dim_products
group by category;

--What is the average costs in each category?
select category, avg(cost) as avg_cost
from gold.dim_products
group by category;

--What is the total revenue generated for each category?
select pr.category, sum(sales_amount) as total_revenue
from gold.facts_table ft
left join gold.dim_products pr
on ft.product_key = pr.product_key
group by pr.category

--Find total revenue that is generated by each customer
select cu.customer_key, cu.first_name, cu.last_name, sum(sales_amount) as total_revenue
from gold.facts_table ft
left join gold.dim_customers cu
on ft.customer_key = cu.customer_key
group by cu.customer_key, cu.first_name, cu.last_name
order by total_revenue desc

--What is the distribution of sold items across countries?
select cu.country, sum(quantity) as total_sold_items
from gold.facts_table ft
left join gold.dim_customers cu
on ft.customer_key = cu.customer_key
group by cu.country


-- Which 5 products generate the highest revenue?
select top 5 pr.product_name, sum(ft.sales_amount) as total_revenue
from gold.facts_table ft
left join gold.dim_products pr
on ft.product_key = pr.product_key
group by pr.product_name
order by total_revenue desc

---- Or usin cte
--SELECT * FROM
--(
--     SELECT
--      p.product_name,
--    SUM(f.sales_amount) total_revenue,
--    ROW_NUMBER() OVER (ORDER BY SUM(f.sales_amount) DESC) AS rank_products
--     FROM gold.facts_table f
--     LEFT JOIN gold.dim_products p
--    ON p.product_key = f.product_key
--    GROUP BY p.product_name)t
--WHERE rank_products <= 5



-- What are the 5 worst-performing products by sale?
select top 5 pr.product_name, sum(ft.sales_amount) as total_revenue
from gold.facts_table ft
left join gold.dim_products pr
on ft.product_key = pr.product_key
group by pr.product_name
order by total_revenue asc


-- Which 5 subcategories generate the highest revenue?
select top 5 pr.subcateegory, sum(ft.sales_amount) as total_revenue
from gold.facts_table ft
left join gold.dim_products pr
on ft.product_key = pr.product_key
group by pr.subcateegory
order by total_revenue desc


-- Find top 10 customers who have generated highest sales
select top 10 cu.customer_key, cu.first_name, cu.last_name, sum(sales_amount) as total_sales
from gold.facts_table ft
left join gold.dim_customers cu
on ft.customer_key = cu.customer_key
group by cu.customer_key, cu.first_name, cu.last_name
order by total_sales desc


-- Find the bottom 3 customers with fewest orders placed
select top 3 cu.customer_key, cu.first_name, cu.last_name, count(order_number) as total_orders
from gold.facts_table ft
left join gold.dim_customers cu
on ft.customer_key = cu.customer_key
group by cu.customer_key, cu.first_name, cu.last_name
order by total_orders asc